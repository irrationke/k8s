---
# tasks file for cilium
- name: 安装cilium网络插件
  block:
    - name: 拷贝helm二进制文件
      copy:
        src: ../../package/helm
        dest: /usr/local/bin/
        mode: +x

    - name: 添加helm补全
      shell:
        cmd: "helm completion bash | tee /etc/bash_completion.d/helm"
      ignore_errors: yes

    # - name: 添加cilium源
    #   shell:
    #     cmd: "helm repo add cilium https://helm.cilium.io"
    - name: 判断cilium 包是否存在
      ignore_errors: yes
      stat:
        path: /root/cilium/cilium-1.15.1.tgz
      register: cilium

    - name: 拷贝cilium helm包
      copy:
        src: ../../package/cilium/cilium-1.15.1.tgz
        dest: /root
      when: "cilium.stat.isreg is not defined"

    # 有外网的做法
    # - name: 拉取cilium仓库
    #   shell:
    #     cmd: "helm pull cilium/cilium"
    #     chdir: "/root"

    # - name: 查找cilium文件
    #   find:
    #     paths: /root
    #     patterns: "cilium-*.tgz"
    #   register: cilium_archive

    # - name: 解压cilium文件
    #   unarchive:
    #     src: /root/{{ item }}
    #     dest: "/root"
    #     remote_src: yes
    #   loop: "{{ cilium_archive.files }}"

    - name: 安装cilium
      shell:
        cmd: "helm install cilium ./cilium-1.15.1.tgz --namespace kube-system --set hubble.relay.enabled=true --set hubble.ui.enabled=true --set prometheus.enabled=true --set operator.prometheus.enabled=true --set hubble.enabled=true --set hubble.metrics.enabled='{dns,drop,tcp,flow,port-distribution,icmp,http}' --set ipv6.enabled=true "
        chdir: "/root"

    - name: 等待cilium部署完成
      wait_for:
        timeout: 50
      delegate_to: localhost

    - name: 拷贝monitoring-example.yaml
      copy:
        src: monitoring-example.yaml
        dest: "/root"

    - name: 安装监控
      shell:
        cmd: "kubectl  apply -f monitoring-example.yaml"
        chdir: "/root"
  when: ansible_default_ipv4.address == m1
