---
# tasks file for containerd
- name: 解压Containerd的cni插件
  block:
    - name: 解压cni-plugins
      block:
        - name: 创建/opt/cni/bin/文件夹
          file:
            path: /opt/cni/bin/
            state: directory

        - name: 判断cni-plugins是否以及解压过
          ignore_errors: yes
          stat:
            path: /opt/cni/bin/vlan
          register: vlan

        - name: 解压cni-plugins
          unarchive:
            copy: yes
            src: ../../package/containerd/cni-plugins-linux-amd64-v1.3.0.tgz
            dest: /opt/cni/bin/
          when: "vlan.stat.isreg is not defined"

    - name: 解压cri-containerd-cni插件
      block:
        - name: 判断cri-containerd-cni是否已经解压过
          ignore_errors: yes
          stat:
            path: /usr/local/bin/containerd
          register: runtime

        - name: 解压cri-containerd-cni包
          unarchive:
            copy: yes
            src: ../../package/containerd/cri-containerd-cni-1.7.8-linux-amd64.tar.gz
            dest: /
          when: "runtime.stat.isreg is not defined"

# 立即执行上问的notify
# - meta: flush_handlers

# - name: 配置Containerd所需的模块
#   copy:
#     src: containerd.conf
#     dest: /etc/modules-load.d/
#     backup: yes
#   notify: rs sys_mod

# - name: 配置Containerd所需的内核
#   copy:
#     src: kubernetes-cri.conf
#     dest: /etc/sysctl.d/
#     backup: yes
#   changed_when: yes
#   notify: reload system

# - name: 拷贝Containerd配置文件
#   copy:
#     src: config.toml
#     dest: /etc/containerd/

# - name: 拷贝加速器配置文件
#   copy:
#     src: hosts.toml
#     dest: /etc/containerd/certs.d/docker.io/
#   notify: rs containerd

- name: 配置containerd
  copy:
    src: "{{ item.0 }}"
    dest: "{{ item.1 }}"
    backup: yes
  changed_when: yes
  with_together:
    - [ containerd.service, containerd.conf, 99-kubernetes-cri.conf, config.toml, hosts.toml ]
    - [ /etc/systemd/system/, /etc/modules-load.d/, /etc/sysctl.d/, /etc/containerd/, /etc/containerd/certs.d/docker.io/ ]
  notify: 
    - rs sys_mod
    - reload system

- meta: flush_handlers

- name: 配置crictl客户端连接的运行时位置
  block:
    - name: 判断crictl客户端是否存在
      ignore_errors: yes
      stat:
        path: /usr/bin/crictl
      register: crictl_stat

    - name: 解压crictl客户端
      unarchive:
        copy: yes
        src: ../../package/containerd/crictl-v1.28.0-linux-amd64.tar.gz
        dest: /usr/bin/
      when: crictl_stat.stat.isreg is not defined

    - name: 拷贝crictl配置文件
      copy:
        src: crictl.yaml
        dest: /etc/
      notify: rs containerd

- meta: flush_handlers

- name: 测试crictl命令
  shell: "crictl info"
  register: test_crictl

- name: 展示crictl info命令结果
  debug:
    msg: "{{ test_crictl.changed }}"
