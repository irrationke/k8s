---
# tasks file for node
- name: 拷贝证书至node节点
  ignore_errors: yes
  script:
    cmd: "node_pki.sh"
  when: ansible_default_ipv4['address'] == m1

- name: kubelet配置 8.2
  block:
    - name: 创建相关目录
      file:
        state: directory
        path: "{{ item }}"
      loop:
        - /var/lib/kubelet
        - /var/log/kubernetes
        - /etc/systemd/system/kubelet.service.d
        - /etc/kubernetes/manifests/

    - name: 拷贝kubelet守护进程文件
      template:
        src: kubelet.service.j2
        dest: /usr/lib/systemd/system/kubelet.service
      notify: rl systemctl

    - name: 拷贝kubelet配置文件
      template:
        src: kubelet-conf.yml.j2
        dest: /etc/kubernetes/kubelet-conf.yml
      notify: rs kubelet

- name: kube-proxy配置 8.3
  block:
    - name: 拷贝kube-proxy守护进程文件
      template:
        src: kube-proxy.service.j2
        dest: /usr/lib/systemd/system/kube-proxy.service

    - name: 拷贝kube-proxy.yaml配置文件
      template:
        src: kube-proxy.yaml.j2
        dest: /etc/kubernetes/kube-proxy.yaml
      notify: rs kube-proxy

- name: 检查node组件是否启动
  block:
    - name: 检查kubelet守护进程
      block:
        - name: 收集kubelet守护进程信息
          ignore_errors: yes
          shell:
            cmd: "systemctl status kubelet | grep running "
          register: kubelet

        - name: 启动kubelet守护进程
          systemd:
            name: kubelet
            state: restarted
            enabled: true
            daemon_reload: yes
          when: kubelet.stdout == ""

    - name: 检查kube-proxy守护进程
      block:
        - name: 收集kube-proxy守护进程信息
          ignore_errors: yes
          shell:
            cmd: "systemctl status kube-proxy | grep running "
          register: proxy

        - name: 启动kubelet守护进程
          systemd:
            name: kube-proxy
            state: restarted
            enabled: true
            daemon_reload: yes
          when: proxy.stdout == ""
